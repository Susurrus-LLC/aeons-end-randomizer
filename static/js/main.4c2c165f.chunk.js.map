{"version":3,"sources":["serviceWorker.js","components/Header/index.js","components/Main/Form/Sets/index.js","components/Main/Form/MarketSetup/SampleCard/index.js","components/Main/Form/MarketSetup/index.js","components/Main/Form/Combatants/index.js","components/Main/Form/Submit/index.js","components/Main/Form/index.js","components/Main/Results/index.js","components/Main/index.js","components/Footer/index.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","Header","className","Sets","props","htmlFor","type","id","name","value","checked","ae","onChange","setAE","td","setTD","tn","setTN","we","setWE","tv","setTV","od","setOD","lg","setLG","bs","setBS","na","setNA","sd","setSD","ta","setTA","iw","setIW","pmES","setPMES","pmFQ","setPMFQ","pmRL","setPMRL","pmAI","setPMAI","pmFV","setPMFV","pmTS","setPMTS","pmSM","setPMSM","pmDF","setPMDF","pmIF","setPMIF","pmCA","setPMCA","SampleCard","card","JSON","parse","index","comp","cost","costHigh","MarketSetup","useEffect","setMarket","markets","find","m","selected","e","setSelected","target","defaultValue","map","mkt","key","arr","i","push","market","cards","crd","stringify","Combatants","disableMin","val","minNem","disableMax","maxNem","mages","setMages","setMinNem","disabled","setMaxNem","Submit","onClick","preventDefault","randomize","handleClick","Form","useState","Markets","setData","sets","nemesis","Results","noBase","setNoBase","setsArr","setSetsArr","availGems","setAvailGems","selectedGems","setSelectedGems","availRelics","setAvailRelics","selectedRelics","setSelectedRelics","availSpells","setAvailSpells","selectedSpells","setSelectedSpells","availMages","setAvailMages","selectedMages","setSelectedMages","availNems","setAvailNems","selectedNems","setSelectedNems","randUnique","list","criteria","exclude","isValid","item","cri","newList","selArr","length","forEach","valid","indexOf","splice","selectRand","Math","floor","random","rand","data","newArr","Object","keys","toUpperCase","newGemArr","set","newRelicArr","newSpellArr","newMagesArr","allMages","mage","newNemsArr","nemeses","nem","difficulty","numMages","listCriteria","Fragment","noBases","magesList","marketArr","concat","marketList","nemText","Main","Footer","now","Date","getFullYear","href","rel","App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4c2c165f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\r\n\r\nimport './header.sass'\r\n\r\nconst Header = () => (\r\n  <header className='header'>\r\n    <h1 className='title'>Aeon&rsquo;s End Randomizer</h1>\r\n  </header>\r\n)\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nimport './sets.sass'\r\n\r\nconst Sets = props => (\r\n  <div className='sets'>\r\n    <ul className='sets-list'>\r\n      <li className='base'>\r\n        <label htmlFor='AE'>\r\n          <input\r\n            type='checkbox'\r\n            id='AE'\r\n            name='AE'\r\n            value='AE'\r\n            checked={props.ae}\r\n            onChange={() => props.setAE(!props.ae)}\r\n          />{' '}\r\n          Aeon&rsquo;s End\r\n        </label>\r\n      </li>\r\n      <li className='expansion'>\r\n        <label htmlFor='TD'>\r\n          <input\r\n            type='checkbox'\r\n            id='TD'\r\n            name='TD'\r\n            value='TD'\r\n            checked={props.td}\r\n            onChange={() => props.setTD(!props.td)}\r\n          />{' '}\r\n          The Depths\r\n        </label>\r\n      </li>\r\n      <li className='expansion'>\r\n        <label htmlFor='TN'>\r\n          <input\r\n            type='checkbox'\r\n            id='TN'\r\n            name='TN'\r\n            value='TN'\r\n            checked={props.tn}\r\n            onChange={() => props.setTN(!props.tn)}\r\n          />{' '}\r\n          The Nameless\r\n        </label>\r\n      </li>\r\n      <li className='base'>\r\n        <label htmlFor='WE'>\r\n          <input\r\n            type='checkbox'\r\n            id='WE'\r\n            name='WE'\r\n            value='WE'\r\n            checked={props.we}\r\n            onChange={() => props.setWE(!props.we)}\r\n          />{' '}\r\n          War Eternal\r\n        </label>\r\n      </li>\r\n      <li className='expansion'>\r\n        <label htmlFor='TV'>\r\n          <input\r\n            type='checkbox'\r\n            id='TV'\r\n            name='TV'\r\n            value='TV'\r\n            checked={props.tv}\r\n            onChange={() => props.setTV(!props.tv)}\r\n          />{' '}\r\n          The Void\r\n        </label>\r\n      </li>\r\n      <li className='expansion'>\r\n        <label htmlFor='OD'>\r\n          <input\r\n            type='checkbox'\r\n            id='OD'\r\n            name='OD'\r\n            value='OD'\r\n            checked={props.od}\r\n            onChange={() => props.setOD(!props.od)}\r\n          />{' '}\r\n          The Outer Dark\r\n        </label>\r\n      </li>\r\n      <li className='base'>\r\n        <label htmlFor='LG'>\r\n          <input\r\n            type='checkbox'\r\n            id='LG'\r\n            name='LG'\r\n            value='LG'\r\n            checked={props.lg}\r\n            onChange={() => props.setLG(!props.lg)}\r\n          />{' '}\r\n          Legacy\r\n        </label>\r\n      </li>\r\n      <li className='expansion'>\r\n        <label htmlFor='BS'>\r\n          <input\r\n            type='checkbox'\r\n            id='BS'\r\n            name='BS'\r\n            value='BS'\r\n            checked={props.bs}\r\n            onChange={() => props.setBS(!props.bs)}\r\n          />{' '}\r\n          Buried Secrets\r\n        </label>\r\n      </li>\r\n      <li className='base'>\r\n        <label htmlFor='NA'>\r\n          <input\r\n            type='checkbox'\r\n            id='NA'\r\n            name='NA'\r\n            value='NA'\r\n            checked={props.na}\r\n            onChange={() => props.setNA(!props.na)}\r\n          />{' '}\r\n          The New Age\r\n        </label>\r\n      </li>\r\n      <li className='expansion'>\r\n        <label htmlFor='SD'>\r\n          <input\r\n            type='checkbox'\r\n            id='SD'\r\n            name='SD'\r\n            value='SD'\r\n            checked={props.sd}\r\n            onChange={() => props.setSD(!props.sd)}\r\n          />{' '}\r\n          Shattered Dreams\r\n        </label>\r\n      </li>\r\n      <li className='expansion'>\r\n        <label htmlFor='TA'>\r\n          <input\r\n            type='checkbox'\r\n            id='TA'\r\n            name='TA'\r\n            value='TA'\r\n            checked={props.ta}\r\n            onChange={() => props.setTA(!props.ta)}\r\n          />{' '}\r\n          The Ancients\r\n        </label>\r\n      </li>\r\n      <li className='expansion'>\r\n        <label htmlFor='IW'>\r\n          <input\r\n            type='checkbox'\r\n            id='IW'\r\n            name='IW'\r\n            value='IW'\r\n            checked={props.iw}\r\n            onChange={() => props.setIW(!props.iw)}\r\n          />{' '}\r\n          Into the Wild\r\n        </label>\r\n      </li>\r\n      <li className='base'>Promos</li>\r\n      <li>\r\n        <ul className='next-level'>\r\n          <li>\r\n            <label htmlFor='PMES'>\r\n              <input\r\n                type='checkbox'\r\n                id='PMES'\r\n                name='PMES'\r\n                value='PMES'\r\n                checked={props.pmES}\r\n                onChange={() => props.setPMES(!props.pmES)}\r\n              />{' '}\r\n              Echo Stone\r\n            </label>\r\n          </li>\r\n          <li>\r\n            <label htmlFor='PMFQ'>\r\n              <input\r\n                type='checkbox'\r\n                id='PMFQ'\r\n                name='PMFQ'\r\n                value='PMFQ'\r\n                checked={props.pmFQ}\r\n                onChange={() => props.setPMFQ(!props.pmFQ)}\r\n              />{' '}\r\n              Fractured Quartz\r\n            </label>\r\n          </li>\r\n          <li>\r\n            <label htmlFor='PMRL'>\r\n              <input\r\n                type='checkbox'\r\n                id='PMRL'\r\n                name='PMRL'\r\n                value='PMRL'\r\n                checked={props.pmRL}\r\n                onChange={() => props.setPMRL(!props.pmRL)}\r\n              />{' '}\r\n              Rock Launcher\r\n            </label>\r\n          </li>\r\n          <li>\r\n            <label htmlFor='PMAI'>\r\n              <input\r\n                type='checkbox'\r\n                id='PMAI'\r\n                name='PMAI'\r\n                value='PMAI'\r\n                checked={props.pmAI}\r\n                onChange={() => props.setPMAI(!props.pmAI)}\r\n              />{' '}\r\n              Abacus of Ignition\r\n            </label>\r\n          </li>\r\n          <li>\r\n            <label htmlFor='PMFV'>\r\n              <input\r\n                type='checkbox'\r\n                id='PMFV'\r\n                name='PMFV'\r\n                value='PMFV'\r\n                checked={props.pmFV}\r\n                onChange={() => props.setPMFV(!props.pmFV)}\r\n              />{' '}\r\n              Fleeting Vision\r\n            </label>\r\n          </li>\r\n          <li>\r\n            <label htmlFor='PMTS'>\r\n              <input\r\n                type='checkbox'\r\n                id='PMTS'\r\n                name='PMTS'\r\n                value='PMTS'\r\n                checked={props.pmTS}\r\n                onChange={() => props.setPMTS(!props.pmTS)}\r\n              />{' '}\r\n              Thieving Spirit\r\n            </label>\r\n          </li>\r\n          <li>\r\n            <label htmlFor='PMSM'>\r\n              <input\r\n                type='checkbox'\r\n                id='PMSM'\r\n                name='PMSM'\r\n                value='PMSM'\r\n                checked={props.pmSM}\r\n                onChange={() => props.setPMSM(!props.pmSM)}\r\n              />{' '}\r\n              Splinter Missile\r\n            </label>\r\n          </li>\r\n          <li>\r\n            <label htmlFor='PMDF'>\r\n              <input\r\n                type='checkbox'\r\n                id='PMDF'\r\n                name='PMDF'\r\n                value='PMDF'\r\n                checked={props.pmDF}\r\n                onChange={() => props.setPMDF(!props.pmDF)}\r\n              />{' '}\r\n              Drown in Flames\r\n            </label>\r\n          </li>\r\n          <li>\r\n            <label htmlFor='PMIF'>\r\n              <input\r\n                type='checkbox'\r\n                id='PMIF'\r\n                name='PMIF'\r\n                value='PMIF'\r\n                checked={props.pmIF}\r\n                onChange={() => props.setPMIF(!props.pmIF)}\r\n              />{' '}\r\n              Illuminating Flame\r\n            </label>\r\n          </li>\r\n          <li>\r\n            <label htmlFor='PMCA'>\r\n              <input\r\n                type='checkbox'\r\n                id='PMCA'\r\n                name='PMCA'\r\n                value='PMCA'\r\n                checked={props.pmCA}\r\n                onChange={() => props.setPMCA(!props.pmCA)}\r\n              />{' '}\r\n              Chronal Arc\r\n            </label>\r\n          </li>\r\n        </ul>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n)\r\n\r\nexport default Sets\r\n","import React from 'react'\r\n\r\nimport './sample-card.sass'\r\n\r\nconst SampleCard = props => {\r\n  const card = JSON.parse(props.card)\r\n\r\n  const cost = () => {\r\n    switch (card.comp) {\r\n      case 'any':\r\n        return card.comp\r\n      case '=':\r\n        return `${card.cost}æ`\r\n      case '><':\r\n        return `${card.cost}/${card.costHigh}æ`\r\n      case '<=':\r\n        return `≤${card.cost}æ`\r\n      case '>=':\r\n        return `≥${card.cost}æ`\r\n      default:\r\n        return `${card.comp}${card.cost}æ`\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      id={`card-${props.index}`}\r\n      className={card.type ? `sample-card ${card.type}` : 'sample-card'}\r\n    >\r\n      <p className='card-text card-type'>{card.type}</p>\r\n      <p className='card-text card-cost'>{cost()}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SampleCard\r\n","import React, { useEffect } from 'react'\r\n\r\nimport SampleCard from './SampleCard'\r\n\r\nimport './marketsetup.sass'\r\n\r\nconst MarketSetup = props => {\r\n  useEffect(() => {\r\n    props.setMarket(props.markets.find(m => m.name === props.selected))\r\n  })\r\n\r\n  const setOptions = () => props.markets.map(mkt => (\r\n    <option value={mkt.name} key={mkt.name}>\r\n      {mkt.name}\r\n    </option>\r\n  ))\r\n\r\n  const cards = () => {\r\n    let arr = []\r\n    for (let i = 1; i <= 9; i++) {\r\n      arr.push(props.market[`card${i}`])\r\n    }\r\n    return arr\r\n  }\r\n\r\n  const displayCards = () => cards().map((crd, i) => (\r\n    <SampleCard\r\n      card={JSON.stringify(crd)}\r\n      index={i + 1}\r\n      key={i}\r\n    />\r\n  ))\r\n\r\n  return (\r\n    <div className='market-setup'>\r\n      <select\r\n        id='market-setup'\r\n        name='market-setup'\r\n        onChange={e => props.setSelected(e.target.value)}\r\n        selected={props.selected}\r\n        defaultValue={props.markets[0].name}\r\n      >\r\n        {setOptions()}\r\n      </select>\r\n      <div className='setup-grid'>\r\n        {displayCards()}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MarketSetup\r\n","import React from 'react'\r\n\r\nconst Combatants = props => {\r\n  const disableMin = val => {\r\n    return val < props.minNem ? 'disabled' : false\r\n  }\r\n\r\n  const disableMax = val => {\r\n    return val > props.maxNem ? 'disabled' : false\r\n  }\r\n\r\n  return (\r\n    <div className='combatants'>\r\n      <p>\r\n        <label htmlFor='mages' className='mages'>\r\n          <select\r\n            id='mages'\r\n            name='mages'\r\n            selected={props.mages}\r\n            defaultValue='4'\r\n            onChange={e => props.setMages(e.target.value)}\r\n          >\r\n            <option value='1'>1</option>\r\n            <option value='2'>2</option>\r\n            <option value='3'>3</option>\r\n            <option value='4'>4</option>\r\n          </select>{' '}\r\n          number of mages\r\n        </label>\r\n      </p>\r\n      <p>\r\n        <label htmlFor='minNem' className='minNem'>\r\n          <select\r\n            id='minNem'\r\n            name='minNem'\r\n            selected={props.minNem}\r\n            defaultValue='1'\r\n            onChange={e => props.setMinNem(+e.target.value)}\r\n          >\r\n            <option value='1' disabled={disableMax(1)}>1</option>\r\n            <option value='2' disabled={disableMax(2)}>2</option>\r\n            <option value='3' disabled={disableMax(3)}>3</option>\r\n            <option value='4' disabled={disableMax(4)}>4</option>\r\n            <option value='5' disabled={disableMax(5)}>5</option>\r\n            <option value='6' disabled={disableMax(6)}>6</option>\r\n            <option value='7' disabled={disableMax(7)}>7</option>\r\n            <option value='8' disabled={disableMax(8)}>8</option>\r\n            <option value='9' disabled={disableMax(9)}>9</option>\r\n            <option value='10' disabled={disableMax(10)}>10</option>\r\n          </select>{' '}\r\n          minimum nemesis difficulty\r\n        </label>\r\n      </p>\r\n      <p>\r\n        <label htmlFor='maxNem' className='maxNem'>\r\n          <select\r\n            id='maxNem'\r\n            name='maxNem'\r\n            selected={props.maxNem}\r\n            defaultValue='10'\r\n            onChange={e => props.setMaxNem(+e.target.value)}\r\n          >\r\n            <option value='1' disabled={disableMin(1)}>1</option>\r\n            <option value='2' disabled={disableMin(2)}>2</option>\r\n            <option value='3' disabled={disableMin(3)}>3</option>\r\n            <option value='4' disabled={disableMin(4)}>4</option>\r\n            <option value='5' disabled={disableMin(5)}>5</option>\r\n            <option value='6' disabled={disableMin(6)}>6</option>\r\n            <option value='7' disabled={disableMin(7)}>7</option>\r\n            <option value='8' disabled={disableMin(8)}>8</option>\r\n            <option value='9' disabled={disableMin(9)}>9</option>\r\n            <option value='10' disabled={disableMin(10)}>10</option>\r\n          </select>{' '}\r\n          maximum nemesis difficulty\r\n        </label>\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Combatants\r\n","import React from 'react'\r\n\r\nconst Submit = props => {\r\n  const handleClick = e => {\r\n    e.preventDefault()\r\n    props.randomize()\r\n  }\r\n\r\n  return (\r\n    <div className='submit'>\r\n      <button\r\n        className='submit-button'\r\n        type='submit'\r\n        value='submit'\r\n        onClick={e => handleClick(e)}\r\n      >\r\n        Randomize\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Submit\r\n","import React, { useState } from 'react'\r\n\r\nimport Markets from '../../../data/marketTemplates.json'\r\n\r\nimport Sets from './Sets'\r\nimport MarketSetup from './MarketSetup'\r\nimport Combatants from './Combatants'\r\nimport Submit from './Submit'\r\n\r\nimport './form.sass'\r\n\r\nconst Form = props => {\r\n  const [ae, setAE] = useState(true)\r\n  const [td, setTD] = useState(false)\r\n  const [tn, setTN] = useState(false)\r\n  const [we, setWE] = useState(false)\r\n  const [tv, setTV] = useState(false)\r\n  const [od, setOD] = useState(false)\r\n  const [lg, setLG] = useState(false)\r\n  const [bs, setBS] = useState(false)\r\n  const [na, setNA] = useState(false)\r\n  const [sd, setSD] = useState(false)\r\n  const [ta, setTA] = useState(false)\r\n  const [iw, setIW] = useState(false)\r\n  const [pmES, setPMES] = useState(false)\r\n  const [pmFQ, setPMFQ] = useState(false)\r\n  const [pmRL, setPMRL] = useState(false)\r\n  const [pmAI, setPMAI] = useState(false)\r\n  const [pmFV, setPMFV] = useState(false)\r\n  const [pmTS, setPMTS] = useState(false)\r\n  const [pmSM, setPMSM] = useState(false)\r\n  const [pmDF, setPMDF] = useState(false)\r\n  const [pmIF, setPMIF] = useState(false)\r\n  const [pmCA, setPMCA] = useState(false)\r\n  const [selected, setSelected] = useState(Markets[0].name)\r\n  const [market, setMarket] = useState(Markets[0])\r\n  const [mages, setMages] = useState(4)\r\n  const [minNem, setMinNem] = useState(1)\r\n  const [maxNem, setMaxNem] = useState(10)\r\n\r\n  const randomize = () => props.setData({\r\n    sets: { ae, td, tn, we, tv, od, lg, bs, na, sd, ta, iw, pmES, pmFQ, pmRL, pmAI, pmFV, pmTS, pmSM, pmDF, pmIF, pmCA },\r\n    market,\r\n    mages,\r\n    nemesis: {\r\n      minNem,\r\n      maxNem\r\n    }\r\n  })\r\n\r\n  return (\r\n    <form\r\n      id='form'\r\n      name='form'\r\n      className='form'\r\n    >\r\n      <div className='column'>\r\n        <Sets\r\n          ae={ae}\r\n          setAE={setAE}\r\n          td={td}\r\n          setTD={setTD}\r\n          tn={tn}\r\n          setTN={setTN}\r\n          we={we}\r\n          setWE={setWE}\r\n          tv={tv}\r\n          setTV={setTV}\r\n          od={od}\r\n          setOD={setOD}\r\n          lg={lg}\r\n          setLG={setLG}\r\n          bs={bs}\r\n          setBS={setBS}\r\n          na={na}\r\n          setNA={setNA}\r\n          sd={sd}\r\n          setSD={setSD}\r\n          ta={ta}\r\n          setTA={setTA}\r\n          iw={iw}\r\n          setIW={setIW}\r\n          pmES={pmES}\r\n          setPMES={setPMES}\r\n          pmFQ={pmFQ}\r\n          setPMFQ={setPMFQ}\r\n          pmRL={pmRL}\r\n          setPMRL={setPMRL}\r\n          pmAI={pmAI}\r\n          setPMAI={setPMAI}\r\n          pmFV={pmFV}\r\n          setPMFV={setPMFV}\r\n          pmTS={pmTS}\r\n          setPMTS={setPMTS}\r\n          pmSM={pmSM}\r\n          setPMSM={setPMSM}\r\n          pmDF={pmDF}\r\n          setPMDF={setPMDF}\r\n          pmIF={pmIF}\r\n          setPMIF={setPMIF}\r\n          pmCA={pmCA}\r\n          setPMCA={setPMCA}\r\n        />\r\n      </div>\r\n      <div className='column'>\r\n        <MarketSetup\r\n          selected={selected}\r\n          setSelected={setSelected}\r\n          market={market}\r\n          setMarket={setMarket}\r\n          markets={Markets}\r\n        />\r\n      </div>\r\n      <div className='column'>\r\n        <Combatants\r\n          mages={mages}\r\n          setMages={setMages}\r\n          minNem={minNem}\r\n          setMinNem={setMinNem}\r\n          maxNem={maxNem}\r\n          setMaxNem={setMaxNem}\r\n        />\r\n        <Submit\r\n          randomize={randomize}\r\n        />\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Form\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport cards from '../../../data/cards.json'\r\nimport allMages from '../../../data/mages.json'\r\nimport nemeses from '../../../data/nemeses.json'\r\n\r\nimport './results.sass'\r\n\r\nconst Results = props => {\r\n  const [noBase, setNoBase] = useState(false)\r\n  const [setsArr, setSetsArr] = useState([])\r\n  const [availGems, setAvailGems] = useState([])\r\n  const [selectedGems, setSelectedGems] = useState([])\r\n  const [availRelics, setAvailRelics] = useState([])\r\n  const [selectedRelics, setSelectedRelics] = useState([])\r\n  const [availSpells, setAvailSpells] = useState([])\r\n  const [selectedSpells, setSelectedSpells] = useState([])\r\n  const [availMages, setAvailMages] = useState([])\r\n  const [selectedMages, setSelectedMages] = useState([])\r\n  const [availNems, setAvailNems] = useState([])\r\n  const [selectedNems, setSelectedNems] = useState([])\r\n\r\n  // Randomly select from a list without duplicates\r\n  const randUnique = (list, criteria, exclude) => {\r\n    const isValid = (item, cri) => {\r\n      switch (cri.comp) {\r\n        case 'any':\r\n          return true\r\n        case '=':\r\n          if (item.cost === cri.cost) {\r\n            return true\r\n          }\r\n          break\r\n        case '<':\r\n          if (item.cost < cri.cost) {\r\n            return true\r\n          }\r\n          break\r\n        case '>':\r\n          if (item.cost > cri.cost) {\r\n            return true\r\n          }\r\n          break\r\n        case '<=':\r\n          if (item.cost <= cri.cost) {\r\n            return true\r\n          }\r\n          break\r\n        case '>=':\r\n          if (item.cost >= cri.cost) {\r\n            return true\r\n          }\r\n          break\r\n        case '><':\r\n          if (item.cost >= cri.cost && item.cost <= cri.costHigh) {\r\n            return true\r\n          }\r\n          break\r\n        default:\r\n          return false\r\n      }\r\n    }\r\n\r\n    let newList = []\r\n    let selArr = []\r\n\r\n    if (criteria.length > 0) {\r\n      list.forEach(item => {\r\n        let valid = false\r\n        let i = 0\r\n\r\n        while (!valid && i < criteria.length) {\r\n          valid = isValid(item, criteria[i])\r\n          i++\r\n        }\r\n\r\n        if (valid) {\r\n          newList.push(item)\r\n        }\r\n      })\r\n    }\r\n\r\n    if (exclude && exclude.length > 0) {\r\n      for (let i = 0; i < newList.length; i++) {\r\n        if (exclude.indexOf(newList[i]) > -1) {\r\n          newList.splice(i, 1)\r\n        }\r\n      }\r\n    }\r\n\r\n    const selectRand = length => Math.floor(Math.random() * length)\r\n\r\n    criteria.forEach(item => {\r\n      if (newList.length > 0) {\r\n        let valid = false\r\n        let rand = selectRand(newList.length)\r\n\r\n        while (!valid) {\r\n          rand = selectRand(newList.length)\r\n          valid = isValid(newList[rand], item)\r\n        }\r\n\r\n        if (valid) {\r\n          selArr.push(newList[rand])\r\n          newList.splice(rand, 1)\r\n        }\r\n      }\r\n    })\r\n\r\n    return selArr\r\n  }\r\n\r\n  // Create an array of game sets any time data changes\r\n  useEffect(() => {\r\n    if (props.data) {\r\n      let newArr = []\r\n      const setsKeys = Object.keys(props.data.sets)\r\n      setsKeys.forEach(key => {\r\n        if (props.data.sets[key]) {\r\n          newArr.push(key.toUpperCase())\r\n        }\r\n      })\r\n\r\n      if (newArr.indexOf('AE') > -1 || newArr.indexOf('WE') > -1 || newArr.indexOf('LG') > -1 || newArr.indexOf('NA') > -1) {\r\n        setNoBase(false)\r\n        setSetsArr(newArr)\r\n      } else {\r\n        setNoBase(true)\r\n        setSelectedGems([])\r\n        setSelectedRelics([])\r\n        setSelectedSpells([])\r\n        setSelectedMages([])\r\n        setSelectedNems([])\r\n      }\r\n    }\r\n  }, [props.data])\r\n\r\n  const noBases = () => {\r\n    if (noBase) {\r\n      return (\r\n        <React.Fragment>\r\n          <p className='error'>\r\n            You must select at least one base game.\r\n          </p>\r\n        </React.Fragment>\r\n      )\r\n    }\r\n  }\r\n\r\n  // Create arrays of available cards, mages, and nemeses any time the selected sets are changed\r\n  useEffect(() => {\r\n    if (setsArr.length > 0) {\r\n      let newGemArr = []\r\n      cards.forEach(card => {\r\n        if (card.type === 'gem' && setsArr.indexOf(card.set) > -1) {\r\n          newGemArr.push(card)\r\n        }\r\n      })\r\n      setAvailGems(newGemArr)\r\n\r\n      let newRelicArr = []\r\n      cards.forEach(card => {\r\n        if (card.type === 'relic' && setsArr.indexOf(card.set) > -1) {\r\n          newRelicArr.push(card)\r\n        }\r\n      })\r\n      setAvailRelics(newRelicArr)\r\n\r\n      let newSpellArr = []\r\n      cards.forEach(card => {\r\n        if (card.type === 'spell' && setsArr.indexOf(card.set) > -1) {\r\n          newSpellArr.push(card)\r\n        }\r\n      })\r\n      setAvailSpells(newSpellArr)\r\n\r\n      let newMagesArr = []\r\n      allMages.forEach(mage => {\r\n        if (setsArr.indexOf(mage.set) > -1) {\r\n          newMagesArr.push(mage)\r\n        }\r\n      })\r\n      setAvailMages(newMagesArr)\r\n\r\n      let newNemsArr = []\r\n      nemeses.forEach(nem => {\r\n        if (setsArr.indexOf(nem.set) > -1 && nem.difficulty >= props.data.nemesis.minNem && nem.difficulty <= props.data.nemesis.maxNem) {\r\n          newNemsArr.push(nem)\r\n        }\r\n      })\r\n      setAvailNems(newNemsArr)\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [setsArr])\r\n\r\n  // Select mages any time the list of available mages changes or the Randomize button is pushed\r\n  useEffect(() => {\r\n    if (availMages.length > 0) {\r\n      const numMages = props.data.mages\r\n      let criteria = []\r\n\r\n      for (let i = 0; i < numMages; i++) {\r\n        criteria.push({ comp: 'any' })\r\n      }\r\n\r\n      setSelectedMages(randUnique(availMages, criteria))\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [availMages])\r\n\r\n  const magesList = () => {\r\n    if (selectedMages.length > 0) {\r\n      return (\r\n        <div className='column'>\r\n          <h2>Mages</h2>\r\n          <ul className='mages-list'>\r\n            {selectedMages.map((item, i) => (\r\n              <li className='mage' key={i}>{item.mage}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  const listCriteria = (type) => {\r\n    let list = []\r\n    for (let i = 1; i <= 9; i++) {\r\n      if (props.data.market[`card${i}`].type === type) {\r\n        list.push(props.data.market[`card${i}`])\r\n      }\r\n    }\r\n    return list\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (availGems.length > 0) {\r\n      const criteria = listCriteria('gem')\r\n      setSelectedGems(randUnique(availGems, criteria))\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [availGems])\r\n\r\n  useEffect(() => {\r\n    if (availRelics.length > 0) {\r\n      const criteria = listCriteria('relic')\r\n      setSelectedRelics(randUnique(availRelics, criteria))\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [availRelics])\r\n\r\n  useEffect(() => {\r\n    if (availSpells.length > 0) {\r\n      const criteria = listCriteria('spell')\r\n      setSelectedSpells(randUnique(availSpells, criteria))\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [availSpells])\r\n\r\n  const marketList = () => {\r\n    if (selectedGems.length > 0 || selectedRelics.length > 0 || selectedSpells.length > 0) {\r\n      const marketArr = [].concat(selectedGems, selectedRelics, selectedSpells)\r\n      return (\r\n        <div className='column'>\r\n          <h2>Market</h2>\r\n          <ul className='market-list'>\r\n            {marketArr.map((item, i) => (\r\n              <li className='market-item' key={i}>{item.name} ({item.type}) (<span className='cost'>{item.cost}æ</span>)</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (availNems.length > 0) {\r\n      setSelectedNems(randUnique(availNems, [{ comp: 'any' }]))\r\n    }\r\n  }, [availNems])\r\n\r\n  const nemText = () => {\r\n    if (props.data) {\r\n      if (availNems.length > 0) {\r\n        if (selectedNems.length > 0) {\r\n          return (\r\n            <div className='column'>\r\n              <h2>Nemesis</h2>\r\n              <p className='nemesis'>\r\n                {`${selectedNems[0].nemesis} (difficulty ${selectedNems[0].difficulty})`}\r\n              </p>\r\n            </div>\r\n          )\r\n        }\r\n      } else {\r\n        return (\r\n          <div className='column'>\r\n            <h2>Nemesis</h2>\r\n            <p className='nemesis'>\r\n              No nemeses match the selected difficulty range.\r\n            </p>\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='results'>\r\n      {noBases()}\r\n      {magesList()}\r\n      {marketList()}\r\n      {nemText()}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Results\r\n","import React, { useState } from 'react'\r\n\r\nimport Form from './Form'\r\nimport Results from './Results'\r\n\r\nimport './main.sass'\r\n\r\nconst Main = () => {\r\n  const [data, setData] = useState(null)\r\n\r\n  return (\r\n    <main className='main'>\r\n      <Form setData={data => setData(data)} />\r\n      <Results data={data} />\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Main\r\n","import React from 'react'\r\n\r\nimport './footer.sass'\r\n\r\nconst Footer = () => {\r\n  const start = 2019\r\n  const now = new Date().getFullYear()\r\n  const years = () => {\r\n    if (start === now) {\r\n      return start\r\n    } else {\r\n      return `${start}–${now}`\r\n    }\r\n  }\r\n\r\n  return (\r\n    <footer className='footer'>\r\n      <div className='ae-block'>\r\n        <p className='ae-copyright'>Aeon&rsquo;s End, by <a href='https://www.indieboardsandcards.com/' target='_blank' rel='noopener noreferrer'>Indie Boards &amp; Cards</a> and <a href='https://www.actionphasegames.com/' target='_blank' rel='noopener noreferrer'>ActionPhase Games</a>, is copyrighted &copy; 2016&ndash;2019 by Lone Oak Games, all rights reserved. The official randomizer app is available on <a href='https://www.actionphasegames.com/pages/aerandomizer' target='_blank' rel='noopener noreferrer'>ActionPhase&rsquo;s website</a>.</p>\r\n      </div>\r\n      <div className='pg-block'>\r\n        <p className='pg-copyright'>Version <a href='https://github.com/Susurrus-LLC/aeons-end-randomizer/blob/master/CHANGELOG.md' target='_blank' rel='noopener noreferrer'>1.0.0</a>. Built by <a href='https://github.com/nai888' target='_blank' rel='noopener noreferrer'>Ian A.&nbsp;Cook</a>, copyright &copy; {years()} under the <a href='https://github.com/Susurrus-LLC/aeons-end-randomizer/blob/master/LICENSE' target='_blank' rel='noopener noreferrer'>AGPL-3.0 license</a>. The source code is available <a href='https://github.com/Susurrus-LLC/aeons-end-randomizer' target='_blank' rel='noopener noreferrer'>on GitHub</a>.</p>\r\n      </div>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\nimport 'normalize.css/normalize.css'\n\nimport './App.sass'\n\nimport Header from './components/Header'\nimport Main from './components/Main'\nimport Footer from './components/Footer'\n\nconst App = () => {\n  return (\n    <div className='App'>\n      <Header />\n      <Main />\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport * as serviceWorker from './serviceWorker'\n\nimport App from './App'\nimport './styles/global.sass'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}