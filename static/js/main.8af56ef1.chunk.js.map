{"version":3,"sources":["serviceWorker.js","components/Header/index.js","components/Main/Form/Sets/index.js","components/Main/Form/MarketSetup/SampleCard/index.js","components/Main/Form/MarketSetup/index.js","components/Main/Form/Combatants/index.js","components/Main/Form/Submit/index.js","components/Main/Form/index.js","components/Main/Results/index.js","components/Main/index.js","components/Footer/index.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","Header","className","Sets","props","htmlFor","type","id","name","value","checked","ae","onChange","setAE","td","setTD","tn","setTN","we","setWE","tv","setTV","od","setOD","lg","setLG","bs","setBS","na","setNA","disabled","sd","setSD","ta","setTA","iw","setIW","pmES","setPMES","pmFV","setPMFV","pmTS","setPMTS","pmSM","setPMSM","pmDF","setPMDF","SampleCard","card","JSON","parse","index","comp","cost","costHigh","MarketSetup","useEffect","setMarket","markets","find","m","selected","e","setSelected","target","defaultValue","map","mkt","key","arr","i","push","market","cards","crd","stringify","Combatants","disableMin","val","minNem","disableMax","maxNem","mages","setMages","setMinNem","setMaxNem","Submit","onClick","preventDefault","randomize","handleClick","Form","useState","Markets","setData","sets","nemesis","Results","noBase","setNoBase","setsArr","setSetsArr","availGems","setAvailGems","selectedGems","setSelectedGems","availRelics","setAvailRelics","selectedRelics","setSelectedRelics","availSpells","setAvailSpells","selectedSpells","setSelectedSpells","availMages","setAvailMages","selectedMages","setSelectedMages","availNems","setAvailNems","selectedNems","setSelectedNems","randUnique","list","criteria","exclude","isValid","item","cri","newList","selArr","length","forEach","valid","indexOf","splice","selectRand","Math","floor","random","rand","data","newArr","Object","keys","toUpperCase","newGemArr","set","newRelicArr","newSpellArr","newMagesArr","allMages","mage","newNemsArr","nemeses","nem","difficulty","numMages","listCriteria","Fragment","noBases","magesList","marketArr","concat","marketList","nemText","Main","Footer","now","Date","getFullYear","href","rel","App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8af56ef1.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\n\nimport './header.sass'\n\nconst Header = () => (\n  <header className='header'>\n    <h1 className='title'>Aeon&rsquo;s End Randomizer</h1>\n  </header>\n)\n\nexport default Header\n","import React from 'react'\n\nimport './sets.sass'\n\nconst Sets = props => (\n  <div className='sets'>\n    <ul className='sets-list'>\n      <li className='base'>\n        <label htmlFor='AE'>\n          <input\n            type='checkbox'\n            id='AE'\n            name='AE'\n            value='AE'\n            checked={props.ae}\n            onChange={() => props.setAE(!props.ae)}\n          />{' '}\n          Aeon&rsquo;s End\n        </label>\n      </li>\n      <li className='expansion'>\n        <label htmlFor='TD'>\n          <input\n            type='checkbox'\n            id='TD'\n            name='TD'\n            value='TD'\n            checked={props.td}\n            onChange={() => props.setTD(!props.td)}\n          />{' '}\n          The Depths\n        </label>\n      </li>\n      <li className='expansion'>\n        <label htmlFor='TN'>\n          <input\n            type='checkbox'\n            id='TN'\n            name='TN'\n            value='TN'\n            checked={props.tn}\n            onChange={() => props.setTN(!props.tn)}\n          />{' '}\n          The Nameless\n        </label>\n      </li>\n      <li className='base'>\n        <label htmlFor='WE'>\n          <input\n            type='checkbox'\n            id='WE'\n            name='WE'\n            value='WE'\n            checked={props.we}\n            onChange={() => props.setWE(!props.we)}\n          />{' '}\n          War Eternal\n        </label>\n      </li>\n      <li className='expansion'>\n        <label htmlFor='TV'>\n          <input\n            type='checkbox'\n            id='TV'\n            name='TV'\n            value='TV'\n            checked={props.tv}\n            onChange={() => props.setTV(!props.tv)}\n          />{' '}\n          The Void\n        </label>\n      </li>\n      <li className='expansion'>\n        <label htmlFor='OD'>\n          <input\n            type='checkbox'\n            id='OD'\n            name='OD'\n            value='OD'\n            checked={props.od}\n            onChange={() => props.setOD(!props.od)}\n          />{' '}\n          The Outer Dark\n        </label>\n      </li>\n      <li className='base'>\n        <label htmlFor='LG'>\n          <input\n            type='checkbox'\n            id='LG'\n            name='LG'\n            value='LG'\n            checked={props.lg}\n            onChange={() => props.setLG(!props.lg)}\n          />{' '}\n          Legacy\n        </label>\n      </li>\n      <li className='expansion'>\n        <label htmlFor='BS'>\n          <input\n            type='checkbox'\n            id='BS'\n            name='BS'\n            value='BS'\n            checked={props.bs}\n            onChange={() => props.setBS(!props.bs)}\n          />{' '}\n          Buried Secrets\n        </label>\n      </li>\n      <li className='base'>\n        <label htmlFor='NA'>\n          <input\n            type='checkbox'\n            id='NA'\n            name='NA'\n            value='NA'\n            checked={props.na}\n            onChange={() => props.setNA(!props.na)}\n            disabled\n          />{' '}\n          The New Age\n        </label>\n      </li>\n      <li className='expansion'>\n        <label htmlFor='SD'>\n          <input\n            type='checkbox'\n            id='SD'\n            name='SD'\n            value='SD'\n            checked={props.sd}\n            onChange={() => props.setSD(!props.sd)}\n            disabled\n          />{' '}\n          Shattered Dreams\n        </label>\n      </li>\n      <li className='expansion'>\n        <label htmlFor='TA'>\n          <input\n            type='checkbox'\n            id='TA'\n            name='TA'\n            value='TA'\n            checked={props.ta}\n            onChange={() => props.setTA(!props.ta)}\n            disabled\n          />{' '}\n          The Ancients\n        </label>\n      </li>\n      <li className='expansion'>\n        <label htmlFor='IW'>\n          <input\n            type='checkbox'\n            id='IW'\n            name='IW'\n            value='IW'\n            checked={props.iw}\n            onChange={() => props.setIW(!props.iw)}\n            disabled\n          />{' '}\n          Into the Wild\n        </label>\n      </li>\n      <li className='base'>Promos</li>\n      <li>\n        <ul className='next-level'>\n          <li>\n            <label htmlFor='PMES'>\n              <input\n                type='checkbox'\n                id='PMES'\n                name='PMES'\n                value='PMES'\n                checked={props.pmES}\n                onChange={() => props.setPMES(!props.pmES)}\n              />{' '}\n              Echo Stone\n            </label>\n          </li>\n          <li>\n            <label htmlFor='PMFV'>\n              <input\n                type='checkbox'\n                id='PMFV'\n                name='PMFV'\n                value='PMFV'\n                checked={props.pmFV}\n                onChange={() => props.setPMFV(!props.pmFV)}\n              />{' '}\n              Fleeting Vision\n            </label>\n          </li>\n          <li>\n            <label htmlFor='PMTS'>\n              <input\n                type='checkbox'\n                id='PMTS'\n                name='PMTS'\n                value='PMTS'\n                checked={props.pmTS}\n                onChange={() => props.setPMTS(!props.pmTS)}\n              />{' '}\n              Thieving Spirit\n            </label>\n          </li>\n          <li>\n            <label htmlFor='PMSM'>\n              <input\n                type='checkbox'\n                id='PMSM'\n                name='PMSM'\n                value='PMSM'\n                checked={props.pmSM}\n                onChange={() => props.setPMSM(!props.pmSM)}\n              />{' '}\n              Splinter Missile\n            </label>\n          </li>\n          <li>\n            <label htmlFor='PMDF'>\n              <input\n                type='checkbox'\n                id='PMDF'\n                name='PMDF'\n                value='PMDF'\n                checked={props.pmDF}\n                onChange={() => props.setPMDF(!props.pmDF)}\n              />{' '}\n              Drown in Flames\n            </label>\n          </li>\n        </ul>\n      </li>\n    </ul>\n  </div>\n)\n\nexport default Sets\n","import React from 'react'\n\nimport './sample-card.sass'\n\nconst SampleCard = props => {\n  const card = JSON.parse(props.card)\n\n  const cost = () => {\n    switch (card.comp) {\n      case 'any':\n        return card.comp\n      case '=':\n        return `${card.cost}æ`\n      case '><':\n        return `${card.cost}/${card.costHigh}æ`\n      case '<=':\n        return `≤${card.cost}æ`\n      case '>=':\n        return `≥${card.cost}æ`\n      default:\n        return `${card.comp}${card.cost}æ`\n    }\n  }\n\n  return (\n    <div\n      id={`card-${props.index}`}\n      className={card.type ? `sample-card ${card.type}` : 'sample-card'}\n    >\n      <p className='card-text card-type'>{card.type}</p>\n      <p className='card-text card-cost'>{cost()}</p>\n    </div>\n  )\n}\n\nexport default SampleCard\n","import React, { useEffect } from 'react'\n\nimport SampleCard from './SampleCard'\n\nimport './marketsetup.sass'\n\nconst MarketSetup = props => {\n  useEffect(() => {\n    props.setMarket(props.markets.find(m => m.name === props.selected))\n  })\n\n  const setOptions = () => props.markets.map(mkt => (\n    <option value={mkt.name} key={mkt.name}>\n      {mkt.name}\n    </option>\n  ))\n\n  const cards = () => {\n    let arr = []\n    for (let i = 1; i <= 9; i++) {\n      arr.push(props.market[`card${i}`])\n    }\n    return arr\n  }\n\n  const displayCards = () => cards().map((crd, i) => (\n    <SampleCard\n      card={JSON.stringify(crd)}\n      index={i + 1}\n      key={i}\n    />\n  ))\n\n  return (\n    <div className='market-setup'>\n      <select\n        id='market-setup'\n        name='market-setup'\n        onChange={e => props.setSelected(e.target.value)}\n        selected={props.selected}\n        defaultValue={props.markets[0].name}\n      >\n        {setOptions()}\n      </select>\n      <div className='setup-grid'>\n        {displayCards()}\n      </div>\n    </div>\n  )\n}\n\nexport default MarketSetup\n","import React from 'react'\n\nconst Combatants = props => {\n  const disableMin = val => {\n    return val < props.minNem ? 'disabled' : false\n  }\n\n  const disableMax = val => {\n    return val > props.maxNem ? 'disabled' : false\n  }\n\n  return (\n    <div className='combatants'>\n      <p>\n        <label htmlFor='mages' className='mages'>\n          <select\n            id='mages'\n            name='mages'\n            selected={props.mages}\n            defaultValue='4'\n            onChange={e => props.setMages(e.target.value)}\n          >\n            <option value='1'>1</option>\n            <option value='2'>2</option>\n            <option value='3'>3</option>\n            <option value='4'>4</option>\n          </select>{' '}\n          number of mages\n        </label>\n      </p>\n      <p>\n        <label htmlFor='minNem' className='minNem'>\n          <select\n            id='minNem'\n            name='minNem'\n            selected={props.minNem}\n            defaultValue='1'\n            onChange={e => props.setMinNem(+e.target.value)}\n          >\n            <option value='1' disabled={disableMax(1)}>1</option>\n            <option value='2' disabled={disableMax(2)}>2</option>\n            <option value='3' disabled={disableMax(3)}>3</option>\n            <option value='4' disabled={disableMax(4)}>4</option>\n            <option value='5' disabled={disableMax(5)}>5</option>\n            <option value='6' disabled={disableMax(6)}>6</option>\n            <option value='7' disabled={disableMax(7)}>7</option>\n            <option value='8' disabled={disableMax(8)}>8</option>\n            <option value='9' disabled={disableMax(9)}>9</option>\n            <option value='10' disabled={disableMax(10)}>10</option>\n          </select>{' '}\n          minimum nemesis difficulty\n        </label>\n      </p>\n      <p>\n        <label htmlFor='maxNem' className='maxNem'>\n          <select\n            id='maxNem'\n            name='maxNem'\n            selected={props.maxNem}\n            defaultValue='10'\n            onChange={e => props.setMaxNem(+e.target.value)}\n          >\n            <option value='1' disabled={disableMin(1)}>1</option>\n            <option value='2' disabled={disableMin(2)}>2</option>\n            <option value='3' disabled={disableMin(3)}>3</option>\n            <option value='4' disabled={disableMin(4)}>4</option>\n            <option value='5' disabled={disableMin(5)}>5</option>\n            <option value='6' disabled={disableMin(6)}>6</option>\n            <option value='7' disabled={disableMin(7)}>7</option>\n            <option value='8' disabled={disableMin(8)}>8</option>\n            <option value='9' disabled={disableMin(9)}>9</option>\n            <option value='10' disabled={disableMin(10)}>10</option>\n          </select>{' '}\n          maximum nemesis difficulty\n        </label>\n      </p>\n    </div>\n  )\n}\n\nexport default Combatants\n","import React from 'react'\n\nconst Submit = props => {\n  const handleClick = e => {\n    e.preventDefault()\n    props.randomize()\n  }\n\n  return (\n    <div className='submit'>\n      <button\n        className='submit-button'\n        type='submit'\n        value='submit'\n        onClick={e => handleClick(e)}\n      >\n        Randomize\n      </button>\n    </div>\n  )\n}\n\nexport default Submit\n","import React, { useState } from 'react'\n\nimport Markets from '../../../data/marketTemplates.json'\n\nimport Sets from './Sets'\nimport MarketSetup from './MarketSetup'\nimport Combatants from './Combatants'\nimport Submit from './Submit'\n\nimport './form.sass'\n\nconst Form = props => {\n  const [ae, setAE] = useState(true)\n  const [td, setTD] = useState(false)\n  const [tn, setTN] = useState(false)\n  const [we, setWE] = useState(false)\n  const [tv, setTV] = useState(false)\n  const [od, setOD] = useState(false)\n  const [lg, setLG] = useState(false)\n  const [bs, setBS] = useState(false)\n  const [na, setNA] = useState(false)\n  const [sd, setSD] = useState(false)\n  const [ta, setTA] = useState(false)\n  const [iw, setIW] = useState(false)\n  const [pmES, setPMES] = useState(false)\n  const [pmFV, setPMFV] = useState(false)\n  const [pmTS, setPMTS] = useState(false)\n  const [pmSM, setPMSM] = useState(false)\n  const [pmDF, setPMDF] = useState(false)\n  const [selected, setSelected] = useState(Markets[0].name)\n  const [market, setMarket] = useState(Markets[0])\n  const [mages, setMages] = useState(4)\n  const [minNem, setMinNem] = useState(1)\n  const [maxNem, setMaxNem] = useState(10)\n\n  const randomize = () => props.setData({\n    sets: { ae, td, tn, we, tv, od, lg, bs, na, sd, ta, iw, pmES, pmFV, pmTS, pmSM, pmDF },\n    market,\n    mages,\n    nemesis: {\n      minNem,\n      maxNem\n    }\n  })\n\n  return (\n    <form\n      id='form'\n      name='form'\n      className='form'\n    >\n      <div className='column'>\n        <Sets\n          ae={ae}\n          setAE={setAE}\n          td={td}\n          setTD={setTD}\n          tn={tn}\n          setTN={setTN}\n          we={we}\n          setWE={setWE}\n          tv={tv}\n          setTV={setTV}\n          od={od}\n          setOD={setOD}\n          lg={lg}\n          setLG={setLG}\n          bs={bs}\n          setBS={setBS}\n          na={na}\n          setNA={setNA}\n          sd={sd}\n          setSD={setSD}\n          ta={ta}\n          setTA={setTA}\n          iw={iw}\n          setIW={setIW}\n          pmES={pmES}\n          setPMES={setPMES}\n          pmFV={pmFV}\n          setPMFV={setPMFV}\n          pmTS={pmTS}\n          setPMTS={setPMTS}\n          pmSM={pmSM}\n          setPMSM={setPMSM}\n          pmDF={pmDF}\n          setPMDF={setPMDF}\n        />\n      </div>\n      <div className='column'>\n        <MarketSetup\n          selected={selected}\n          setSelected={setSelected}\n          market={market}\n          setMarket={setMarket}\n          markets={Markets}\n        />\n      </div>\n      <div className='column'>\n        <Combatants\n          mages={mages}\n          setMages={setMages}\n          minNem={minNem}\n          setMinNem={setMinNem}\n          maxNem={maxNem}\n          setMaxNem={setMaxNem}\n        />\n        <Submit\n          randomize={randomize}\n        />\n      </div>\n    </form>\n  )\n}\n\nexport default Form\n","import React, { useState, useEffect } from 'react'\n\nimport cards from '../../../data/cards.json'\nimport allMages from '../../../data/mages.json'\nimport nemeses from '../../../data/nemeses.json'\n\nimport './results.sass'\n\nconst Results = props => {\n  const [noBase, setNoBase] = useState(false)\n  const [setsArr, setSetsArr] = useState([])\n  const [availGems, setAvailGems] = useState([])\n  const [selectedGems, setSelectedGems] = useState([])\n  const [availRelics, setAvailRelics] = useState([])\n  const [selectedRelics, setSelectedRelics] = useState([])\n  const [availSpells, setAvailSpells] = useState([])\n  const [selectedSpells, setSelectedSpells] = useState([])\n  const [availMages, setAvailMages] = useState([])\n  const [selectedMages, setSelectedMages] = useState([])\n  const [availNems, setAvailNems] = useState([])\n  const [selectedNems, setSelectedNems] = useState([])\n\n  // Randomly select from a list without duplicates\n  const randUnique = (list, criteria, exclude) => {\n    const isValid = (item, cri) => {\n      switch (cri.comp) {\n        case 'any':\n          return true\n        case '=':\n          if (item.cost === cri.cost) {\n            return true\n          }\n          break\n        case '<':\n          if (item.cost < cri.cost) {\n            return true\n          }\n          break\n        case '>':\n          if (item.cost > cri.cost) {\n            return true\n          }\n          break\n        case '<=':\n          if (item.cost <= cri.cost) {\n            return true\n          }\n          break\n        case '>=':\n          if (item.cost >= cri.cost) {\n            return true\n          }\n          break\n        case '><':\n          if (item.cost >= cri.cost && item.cost <= cri.costHigh) {\n            return true\n          }\n          break\n        default:\n          return false\n      }\n    }\n\n    let newList = []\n    let selArr = []\n\n    if (criteria.length > 0) {\n      list.forEach(item => {\n        let valid = false\n        let i = 0\n\n        while (!valid && i < criteria.length) {\n          valid = isValid(item, criteria[i])\n          i++\n        }\n\n        if (valid) {\n          newList.push(item)\n        }\n      })\n    }\n\n    if (exclude && exclude.length > 0) {\n      for (let i = 0; i < newList.length; i++) {\n        if (exclude.indexOf(newList[i]) > -1) {\n          newList.splice(i, 1)\n        }\n      }\n    }\n\n    const selectRand = length => Math.floor(Math.random() * length)\n\n    criteria.forEach(item => {\n      if (newList.length > 0) {\n        let valid = false\n        let rand = selectRand(newList.length)\n\n        while (!valid) {\n          rand = selectRand(newList.length)\n          valid = isValid(newList[rand], item)\n        }\n\n        if (valid) {\n          selArr.push(newList[rand])\n          newList.splice(rand, 1)\n        }\n      }\n    })\n\n    return selArr\n  }\n\n  // Create an array of game sets any time data changes\n  useEffect(() => {\n    if (props.data) {\n      let newArr = []\n      const setsKeys = Object.keys(props.data.sets)\n      setsKeys.forEach(key => {\n        if (props.data.sets[key]) {\n          newArr.push(key.toUpperCase())\n        }\n      })\n\n      if (newArr.indexOf('AE') > -1 || newArr.indexOf('WE') > -1 || newArr.indexOf('LG') > -1 || newArr.indexOf('NA') > -1) {\n        setNoBase(false)\n        setSetsArr(newArr)\n      } else {\n        setNoBase(true)\n        setSelectedGems([])\n        setSelectedRelics([])\n        setSelectedSpells([])\n        setSelectedMages([])\n        setSelectedNems([])\n      }\n    }\n  }, [props.data])\n\n  const noBases = () => {\n    if (noBase) {\n      return (\n        <React.Fragment>\n          <p className='error'>\n            You must select at least one base game.\n          </p>\n        </React.Fragment>\n      )\n    }\n  }\n\n  // Create arrays of available cards, mages, and nemeses any time the selected sets are changed\n  useEffect(() => {\n    if (setsArr.length > 0) {\n      let newGemArr = []\n      cards.forEach(card => {\n        if (card.type === 'gem' && setsArr.indexOf(card.set) > -1) {\n          newGemArr.push(card)\n        }\n      })\n      setAvailGems(newGemArr)\n\n      let newRelicArr = []\n      cards.forEach(card => {\n        if (card.type === 'relic' && setsArr.indexOf(card.set) > -1) {\n          newRelicArr.push(card)\n        }\n      })\n      setAvailRelics(newRelicArr)\n\n      let newSpellArr = []\n      cards.forEach(card => {\n        if (card.type === 'spell' && setsArr.indexOf(card.set) > -1) {\n          newSpellArr.push(card)\n        }\n      })\n      setAvailSpells(newSpellArr)\n\n      let newMagesArr = []\n      allMages.forEach(mage => {\n        if (setsArr.indexOf(mage.set) > -1) {\n          newMagesArr.push(mage)\n        }\n      })\n      setAvailMages(newMagesArr)\n\n      let newNemsArr = []\n      nemeses.forEach(nem => {\n        if (setsArr.indexOf(nem.set) > -1 && nem.difficulty >= props.data.nemesis.minNem && nem.difficulty <= props.data.nemesis.maxNem) {\n          newNemsArr.push(nem)\n        }\n      })\n      setAvailNems(newNemsArr)\n    }\n    // eslint-disable-next-line\n  }, [setsArr])\n\n  // Select mages any time the list of available mages changes or the Randomize button is pushed\n  useEffect(() => {\n    if (availMages.length > 0) {\n      const numMages = props.data.mages\n      let criteria = []\n\n      for (let i = 0; i < numMages; i++) {\n        criteria.push({ comp: 'any' })\n      }\n\n      setSelectedMages(randUnique(availMages, criteria))\n    }\n    // eslint-disable-next-line\n  }, [availMages])\n\n  const magesList = () => {\n    if (selectedMages.length > 0) {\n      return (\n        <div className='column'>\n          <h2>Mages</h2>\n          <ul className='mages-list'>\n            {selectedMages.map((item, i) => (\n              <li className='mage' key={i}>{item.mage}</li>\n            ))}\n          </ul>\n        </div>\n      )\n    }\n  }\n\n  const listCriteria = (type) => {\n    let list = []\n    for (let i = 1; i <= 9; i++) {\n      if (props.data.market[`card${i}`].type === type) {\n        list.push(props.data.market[`card${i}`])\n      }\n    }\n    return list\n  }\n\n  useEffect(() => {\n    if (availGems.length > 0) {\n      const criteria = listCriteria('gem')\n      setSelectedGems(randUnique(availGems, criteria))\n    }\n    // eslint-disable-next-line\n  }, [availGems])\n\n  useEffect(() => {\n    if (availRelics.length > 0) {\n      const criteria = listCriteria('relic')\n      setSelectedRelics(randUnique(availRelics, criteria))\n    }\n    // eslint-disable-next-line\n  }, [availRelics])\n\n  useEffect(() => {\n    if (availSpells.length > 0) {\n      const criteria = listCriteria('spell')\n      setSelectedSpells(randUnique(availSpells, criteria))\n    }\n    // eslint-disable-next-line\n  }, [availSpells])\n\n  const marketList = () => {\n    if (selectedGems.length > 0 || selectedRelics.length > 0 || selectedSpells.length > 0) {\n      const marketArr = [].concat(selectedGems, selectedRelics, selectedSpells)\n      return (\n        <div className='column'>\n          <h2>Market</h2>\n          <ul className='market-list'>\n            {marketArr.map((item, i) => (\n              <li className='market-item' key={i}>{item.name} ({item.type}) (<span className='cost'>{item.cost}æ</span>)</li>\n            ))}\n          </ul>\n        </div>\n      )\n    }\n  }\n\n  useEffect(() => {\n    if (availNems.length > 0) {\n      setSelectedNems(randUnique(availNems, [{ comp: 'any' }]))\n    }\n  }, [availNems])\n\n  const nemText = () => {\n    if (props.data) {\n      if (availNems.length > 0) {\n        if (selectedNems.length > 0) {\n          return (\n            <div className='column'>\n              <h2>Nemesis</h2>\n              <p className='nemesis'>\n                {`${selectedNems[0].nemesis} (difficulty ${selectedNems[0].difficulty})`}\n              </p>\n            </div>\n          )\n        }\n      } else {\n        return (\n          <div className='column'>\n            <h2>Nemesis</h2>\n            <p className='nemesis'>\n              No nemeses match the selected difficulty range.\n            </p>\n          </div>\n        )\n      }\n    }\n  }\n\n  return (\n    <div className='results'>\n      {noBases()}\n      {magesList()}\n      {marketList()}\n      {nemText()}\n    </div>\n  )\n}\n\nexport default Results\n","import React, { useState } from 'react'\n\nimport Form from './Form'\nimport Results from './Results'\n\nimport './main.sass'\n\nconst Main = () => {\n  const [data, setData] = useState(null)\n\n  return (\n    <main className='main'>\n      <Form setData={data => setData(data)} />\n      <Results data={data} />\n    </main>\n  )\n}\n\nexport default Main\n","import React from 'react'\n\nimport './footer.sass'\n\nconst Footer = () => {\n  const start = 2019\n  const now = new Date().getFullYear()\n  const years = () => {\n    if (start === now) {\n      return start\n    } else {\n      return `${start}–${now}`\n    }\n  }\n\n  return (\n    <footer className='footer'>\n      <div className='ae-block'>\n        <p className='ae-copyright'>Aeon&rsquo;s End, by <a href='https://www.indieboardsandcards.com/' target='_blank' rel='noopener noreferrer'>Indie Boards &amp; Cards</a> and <a href='https://www.actionphasegames.com/' target='_blank' rel='noopener noreferrer'>ActionPhase Games</a>, is copyrighted &copy; 2016&ndash;2019 by Lone Oak Games, all rights reserved. The official randomizer app is available on <a href='https://www.actionphasegames.com/pages/aerandomizer' target='_blank' rel='noopener noreferrer'>ActionPhase&rsquo;s website</a>.</p>\n      </div>\n      <div className='pg-block'>\n        <p className='pg-copyright'>This site was built by <a href='https://github.com/nai888' target='_blank' rel='noopener noreferrer'>Ian A.&nbsp;Cook</a>, copyright &copy; {years()} under the <a href='https://github.com/nai888/aeons-end-randomizer/blob/master/LICENSE' target='_blank' rel='noopener noreferrer'>AGPL-3.0 license</a>. The source code is available <a href='https://github.com/nai888/aeons-end-randomizer' target='_blank' rel='noopener noreferrer'>on GitHub</a>.</p>\n      </div>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport 'normalize.css/normalize.css'\n\nimport './App.sass'\n\nimport Header from './components/Header'\nimport Main from './components/Main'\nimport Footer from './components/Footer'\n\nconst App = () => {\n  return (\n    <div className='App'>\n      <Header />\n      <Main />\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport * as serviceWorker from './serviceWorker'\n\nimport App from './App'\nimport './styles/global.sass'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}